MERGE (a:User { name: 'Alpha' })
MERGE (b:User { name: 'Beta' })
MERGE (g:User { name: 'Gamma' })
MERGE (d:User { name: 'Delta' })
MERGE (ep:User { name: 'Epsilon' })
MERGE (z:User { name: 'Zeta' })
MERGE (ez:User { name: 'Eta' })
MERGE (th:User { name: 'Theta' })
MERGE (i:User { name: 'Iota' })
MERGE (k:User { name: 'Kappa' })
MERGE (l:User { name: 'Lambda' })
MERGE (m:User { name: 'Mu' })
MERGE (n:User { name: 'Nu' })
MERGE (x:User { name: 'Xi' })
MERGE (omi:User { name: 'Omicron' })
MERGE (pi:User { name: 'Pi' })
MERGE (r:User { name: 'Rho' })
MERGE (s:User { name: 'Sigma' })
MERGE (ta:User { name: 'Tau' })
MERGE (u:User { name: 'Upsilon' })
MERGE (ph:User { name: 'Phi' })
MERGE (c:User { name: 'Chi' })
MERGE (ps:User { name: 'Psi' })
MERGE (ome:User { name: 'Omega' })

MERGE (a)-[:FOLLOWS { prio: 2 }]->(b)
MERGE (a)<-[:FOLLOWS]-(b)
MERGE (a)-[:FOLLOWS { prio: 1 }]->(g)
MERGE (a)-[:FOLLOWS { prio: 4 }]->(d)
MERGE (a)-[:FOLLOWS { prio: 5 }]->(ep)
MERGE (a)-[:FOLLOWS { prio: 3 }]->(z)
MERGE (a)-[:FOLLOWS]->(ez)
MERGE (a)-[:FOLLOWS]->(th)
MERGE (b)-[:FOLLOWS]->(th)
MERGE (g)-[:FOLLOWS]->(th)
MERGE (ep)-[:FOLLOWS]->(th)
MERGE (z)-[:FOLLOWS]->(th)
MERGE (ez)-[:FOLLOWS]->(th)

MERGE (cu:Tag { name: 'Culture' })
MERGE (co:Tag { name: 'Cooking' })
MERGE (ho:Tag { name: 'Hobbies' })
MERGE (li:Tag { name: 'Literature' })
MERGE (ar:Tag { name: 'Art' })
MERGE (en:Tag { name: 'Entertainment' })
MERGE (fic:Tag { name: 'Fiction' })
MERGE (ga:Tag { name: 'Game' })
MERGE (po:Tag { name: 'Poetry' })
MERGE (sp:Tag { name: 'Sports' })
MERGE (da:Tag { name: 'Dance' })
MERGE (mu:Tag { name: 'Music' })
MERGE (op:Tag { name: 'Opera' })
MERGE (the:Tag { name: 'Theatre' })
MERGE (arc:Tag { name: 'Architecture' })
MERGE (cr:Tag { name: 'Crafts' })
MERGE (dr:Tag { name: 'Drawing' })
MERGE (fil:Tag { name: 'Film' })
MERGE (pa:Tag { name: 'Painting' })
MERGE (pho:Tag { name: 'Photography' })
MERGE (sc:Tag { name: 'Sculpture' })
MERGE (ty:Tag { name: 'Typography' })
MERGE (ge:Tag { name: 'Geography' })
MERGE (pl:Tag { name: 'Places' })
MERGE (he:Tag { name: 'Health' })
MERGE (fit:Tag { name: 'Fitness' })
MERGE (ex:Tag { name: 'Exercise' })
MERGE (nu:Tag { name: 'Nutrition' })
MERGE (hi:Tag { name: 'History' })
MERGE (re:Tag { name: 'Renaissance' })
MERGE (ma:Tag { name: 'Mathematics' })
MERGE (al:Tag { name: 'Algebra' })
MERGE (ca:Tag { name: 'Calculus' })
MERGE (geom:Tag { name: 'Geometry' })
MERGE (lo:Tag { name: 'Logic' })

MERGE (a)-[:INTERESTED_IN { prio: 2 }]->(cu)
MERGE (a)-[:INTERESTED_IN { prio: 5 }]->(co)
MERGE (a)-[:INTERESTED_IN { prio: 1 }]->(ho)
MERGE (a)-[:INTERESTED_IN { prio: 3 }]->(li)
MERGE (a)-[:INTERESTED_IN]->(ar)
MERGE (a)-[:INTERESTED_IN { prio: 4 }]->(en)
MERGE (a)-[:INTERESTED_IN]->(fic)
MERGE (b)-[:INTERESTED_IN { prio: 1 }]->(cu)
MERGE (b)-[:INTERESTED_IN { prio: 1 }]->(cu)
MERGE (g)-[:INTERESTED_IN { prio: 1 }]->(mu)
MERGE (ep)-[:INTERESTED_IN { prio: 1 }]->(cu)
MERGE (z)-[:INTERESTED_IN { prio: 1 }]->(cu)
MERGE (ez)-[:INTERESTED_IN { prio: 1 }]->(cu)

MERGE (b)-[:SHARED]->(s1:Share { url: 'https://en.wikipedia.org/wiki/Culture', time: timestamp() })-[:IS_TOPIC]->(cu)
MERGE (b)-[:SHARED]->(s2:Share { url: 'https://en.wikipedia.org/wiki/Logic_(rapper)', time: timestamp() })-[:IS_TOPIC]->(lo)
MERGE (g)-[:SHARED]->(s3:Share { url: 'http://www.bbc.com/culture', time: timestamp() })-[:IS_TOPIC]->(cu)
MERGE (ep)-[:SHARED]->(s4:Share { url: 'https://www.thesaurus.com/browse/culture', time: timestamp() })-[:IS_TOPIC]->(cu)
MERGE (z)-[:SHARED]->(s5:Share { url: 'https://www.l-beach.com/blog/categories/culture', time: timestamp() })-[:IS_TOPIC]->(cu)
MERGE (ez)-[:SHARED]->(s6:Share { url: 'https://cultureactioneurope.org/', time: timestamp() })-[:IS_TOPIC]->(cu)
MERGE (ep)-[:SHARED]->(s7:Share { url: 'https://en.wikipedia.org/wiki/Cooking', time: timestamp() })-[:IS_TOPIC]->(co)
MERGE (z)-[:SHARED]->(s8:Share { url: 'https://www.youtube.com/channel/UCBOjaoOQgIJiV0itcGQIMJQ', time: timestamp() })-[:IS_TOPIC]->(co)
MERGE (ez)-[:SHARED]->(s9:Share { url: 'https://www.allrecipes.com/recipes/1642/everyday-cooking/', time: timestamp() })-[:IS_TOPIC]->(co)
MERGE (ome)-[:SHARED]->(s10:Share { url: 'https://www.khanacademy.org/test-prep/mcat/society-and-culture/culture/a/cultural-relativism-article', time: timestamp() })-[:IS_TOPIC]->(cu)

MERGE (adam:Location {name : "Amsterdam", longitude : 4.8936041, latitude : 52.3727598 })
MERGE (boek:Location {name : "Boekelo", longitude : 6.7994207, latitude : 52.204006 })
MERGE (frio:Location {name : "Cabo Frio", longitude : -42.0189227, latitude : -22.8804369 })
MERGE (del:Location {name : "Delft", longitude : 4.35839, latitude : 52.0114017 })
MERGE (ensch:Location {name : "Enschede", longitude : 6.8940537, latitude : 52.2209855 })

MERGE (s1)-[:AVAILABLE_AT { radius: 100 }]->(adam)
MERGE (s2)-[:AVAILABLE_AT { radius: 50 }]->(boek)
MERGE (s3)-[:AVAILABLE_AT { radius: 200 }]->(frio)
MERGE (s4)-[:AVAILABLE_AT { radius: 20 }]->(del)
MERGE (s5)-[:AVAILABLE_AT { radius: 50 }]->(adam)
MERGE (s6)-[:AVAILABLE_AT { radius: 75 }]->(ensch)

MERGE (s1)-[:AVAILABLE_DURING]->(:Interval {from: timestamp(), until: timestamp() + 1000000 })
MERGE (s2)-[:AVAILABLE_DURING]->(:Interval {from: timestamp() })
MERGE (s3)-[:AVAILABLE_DURING]->(:Interval {from: timestamp() })
MERGE (s4)-[:AVAILABLE_DURING]->(:Interval {from: timestamp(), until: timestamp() + 1000000 })
MERGE (s5)-[:AVAILABLE_DURING]->(:Interval {from: timestamp(), until: timestamp()})
MERGE (s6)-[:AVAILABLE_DURING]->(:Interval {from: timestamp(), until: timestamp() + 1000000 })

MERGE (ep)-[:LIKED {when: timestamp()}]->(s1)
MERGE (i)-[:LIKED {when: timestamp()}]->(s1)
MERGE (ph)-[:LIKED {when: timestamp()}]->(s2)

